# ============================
#   Toolchain Build Makefile
#   Author: TurBoTse
# ============================

TOPDIR      := $(CURDIR)
CT_TARGET   ?= $(or $(shell echo $$CT_TARGET), mipsel-linux-musl)
CT_PREFIX   ?= $(or $(shell echo $$CT_PREFIX), $(TOPDIR)/$(CT_TARGET))
CT_NG       := ./ct-ng

.PHONY: all build clean distclean

all: build

build:
	@echo "\033[1;32m===> üîß Starting toolchain build for:\033[0m \033[1;34m$(CT_TARGET)\033[0m"
	@for dep in bison flex gperf help2man libtool makeinfo; do \
		command -v $$dep >/dev/null || { echo "\033[1;31m===> ‚ùå Missing dependency: $$dep\033[0m"; exit 1; }; \
	done
	@if [ ! -f .ct-ng-installed ]; then \
		echo "\033[1;33m===> ‚è≥ Bootstrapping crosstool-ng...\033[0m"; \
		./bootstrap && ./configure --enable-local && make || { \
			echo "\033[1;31m===> ‚ùå Failed to bootstrap ct-ng. Check dependencies or permissions.\033[0m"; exit 1; }; \
		touch .ct-ng-installed; \
	fi
	@echo "\033[1;36m===> üì¶ Configuring target: $(CT_TARGET)\033[0m"
	@$(CT_NG) $(CT_TARGET) || { echo "\033[1;31m===> ‚ùå Failed to configure $(CT_TARGET): $$?\033[0m"; exit 1; }
	@echo "\033[1;32m===> üöß Building toolchain...\033[0m"
        @export PYTHON=$$(which python3); \
        export CT_PARALLEL_JOBS=$$(($$(nproc)/2)); \
	@$(CT_NG) build CT_JOBS=$$CT_PARALLEL_JOBS CT_NCURSES_DISABLE_WIDEC=y || { echo "\033[1;31m===> ‚ùå Toolchain build failed: $$?\033[0m"; exit 1; }
	@echo "\033[1;32m===> ‚úÖ Toolchain build completed at:\033[0m \033[1;34m$(CT_PREFIX)\033[0m"

        @echo "\033[1;36m===> üìù Saving build logs...\033[0m"
        @mkdir -p $(TOPDIR)/build-logs
        @if [ -f ".build/$(CT_TARGET)/build.log.bz2" ]; then \
            cp -v ".build/$(CT_TARGET)/build.log.bz2" "$(TOPDIR)/build-logs/"; \
        else \
            echo "\033[1;33m===> ‚ö†Ô∏è Build logs not found\033[0m"; \
        fi

clean:
	@echo "\033[1;36m===> üßπ Cleaning build artifacts...\033[0m"
	@if [ -x "$(CT_NG)" ]; then $(CT_NG) distclean || { echo "\033[1;31m===> ‚ùå Failed to run ct-ng distclean: $$?\033[0m"; exit 1; }; fi
	@rm -f .ct-ng-installed
	@echo "\033[1;32m===> ‚ôªÔ∏è  Clean completed.\033[0m"

distclean: clean
	@echo "\033[1;36m===> üßπ Removing toolchain and build directory...\033[0m"
	@if [ -d "$(CT_PREFIX)" ]; then rm -rf "$(CT_PREFIX)"; fi
	@if [ -d "$(TOPDIR)/.build" ]; then rm -rf "$(TOPDIR)/.build"; fi
	@echo "\033[1;32m===> ‚ôªÔ∏è  Distclean completed.\033[0m"
