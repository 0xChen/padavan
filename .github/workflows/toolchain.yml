name: Build Toolchain

on:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        target: [mipsel-linux-musl]

    steps:
      - uses: actions/checkout@main

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install unzip \
            fakeroot \
            cmake \
            bison \
            flex \
            gperf \
            help2man \
            libtool-bin \
            zlib1g-dev \
            libncurses5-dev \
            libgmp-dev \
            libmpfr-dev \
            libmpc-dev \
            libgmp3-dev \
            libltdl-dev \
            gawk \
            autopoint \
            texinfo \
            autoconf \
            automake \
            gettext \
            g++ \
            file \
            nano \
            python3 \
            python3-docutils \
            make \
            wget \
            xz-utils \
            curl \
            xxd \
            cpio \
            build-essential \
            pkg-config \
            bc \
            git
          # 强制验证 texinfo 是否安装成功
          makeinfo --version || { echo "❌ texinfo 未安装"; exit 1; }  
          libtool --version || { echo "❌ libtool 未安装"; exit 1; }  
          echo "PATH=$PATH"  # 检查环境变量

      - name: Build and Package
        working-directory: toolchain
        run: |
          echo "Current directory: $(pwd)"
          # 强制清除可能的残留配置
          make clean CT_TARGET=${{ matrix.target }} || true
          # 强制从源码构建，跳过下载预编译包
          make CT_TARGET=${{ matrix.target }} FORCE_BUILD_TOOLCHAIN=1 || true 
          # 确保打包路径正确
          cd "${{ matrix.target }}"
          tar cJf "../${{ matrix.target }}.tar.xz" .

          echo "Copying build logs for artifact upload..."
          # 确保这些源路径是正确的
          mkdir -p ${{ github.workspace }}/ct_build_logs # 在仓库根目录创建日志文件夹
          cp -vf .build/mipsel-linux-musl/build.log ${{ github.workspace }}/ct_build_logs/ || echo "build.log not found"

      - name: Upload build logs on failure or success
        uses: actions/upload-artifact@main
        with:
          name: mipsel-linux-musl-build-logs
          path: ${{ github.workspace }}/ct_build_logs/

      - uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.target }}
          path: toolchain/${{ matrix.target }}.tar.xz

      - uses: ncipollo/release-action@main
        with:
          tag: toolchain
          artifacts: toolchain/${{ matrix.target }}.tar.xz
          allowUpdates: true
          omitBodyDuringUpdate: true
